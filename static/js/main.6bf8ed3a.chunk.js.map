{"version":3,"sources":["Components/Header/Header.js","actions/index.js","Components/ErrorModal/ErrorModal.js","Components/MainComp/SearchBar/SearchBar.js","Components/MainComp/ForcastDay/ForcastDay.js","Components/MainComp/LikesUnit/LikesUnit.js","Components/MainComp/WeatherDisplay/WeatherDisplay.js","Components/MainComp/Home/Home.js","Components/FaveComp/Favorites/Favorites.js","App.js","reportWebVitals.js","reducers/currentCity.js","reducers/favorites.js","reducers/modal.js","reducers/reducersIndex.js","index.js"],"names":["Header","currCity","useSelector","state","currentCity","history","useHistory","useState","location","pathname","page","setPage","console","log","useEffect","className","Typography","variant","ToggleButtonGroup","color","value","onChange","e","preventDefault","routingTarget","target","endsWith","push","replace","ToggleButton","disabled","includes","style","fontSize","city","type","payload","name","key","currentWeather","weather","currentTemp","temp","openModal","reason","msg","ErrorModal","dispatch","useDispatch","isModalOpen","modal","Modal","open","onClose","sx","API_KEY","process","BASE_URL","SearchBar","searchString","setSearchString","getCityKey","a","fetch","searchResponse","json","dsearchData","LocalizedName","Key","getCityCurrentWeather","weatherResponse","weatherData","WeatherText","Math","round","Temperature","Metric","Value","getCityInfo","keyPressed","keyCode","Paper","width","InputBase","placeholder","ascii","charCodeAt","length","slice","onKeyDown","IconButton","p","onClick","ForcastDay","day","Card","CardContent","dayOfWeek","maxTemp","minTemp","LikesUnit","isCityDisplayed","savedFavs","favorites","findIndex","isLiked","setIsLiked","didLikeChange","toggleLike","addFavorite","DAY_OF_WEEK","SERVICE_URL","WeatherDisplay","forecast","setForecast","forecastResponse","forecastData","parsedForecast","DailyForecasts","map","Date","getDay","Maximum","Minimum","fetchForecast","Box","i","Home","Favorites","favedCities","chosenCity","choseFavorite","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","currentCityReducer","action","favoritesReducer","every","filteredState","filter","modalReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bf8ed3a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Typography, ToggleButtonGroup, ToggleButton } from '@mui/material';\r\n\r\nimport './Header.css';\r\n// const APP_NAME = '/symmetrical-eureka-weather-app/';\r\n// const BASE_URL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport default function Header() {\r\n\r\n  const currCity = useSelector(state => state.currentCity)\r\n  const history = useHistory();\r\n  const [page, setPage] = useState(history.location.pathname);\r\n\r\n  // console.log('App: ', history.location.pathname)\r\n  console.log(page);\r\n  console.log('history: ', history)\r\n\r\n\r\n  useEffect(() => {\r\n    setPage(history.location.pathname)\r\n  }, [currCity]);\r\n\r\n\r\n  const handleRouting = (e) => {\r\n    e.preventDefault();\r\n    const routingTarget = e.target.value;\r\n    console.log('routing target: ', routingTarget)\r\n    setPage(routingTarget);\r\n    // setPage(BASE_URL + routingTarget);\r\n    if (routingTarget.endsWith('favorites')) {\r\n      history.push(routingTarget);\r\n    } else {\r\n      history.replace('');\r\n    }\r\n    console.log('history now: ', history)\r\n  }\r\n\r\n\r\n  return (\r\n    <header className='header-comp'>\r\n      <Typography variant='h3' className='logo'>So how's the weather?</Typography>\r\n      <ToggleButtonGroup\r\n        className='btn-group'\r\n        color='primary'\r\n        value={[page]}\r\n        onChange={handleRouting}>\r\n        <ToggleButton value='/' className=\"btn home-btn\" disabled={!page.includes('favorites')} style={{ fontSize: '20px' }}>\r\n          Home\r\n        </ToggleButton>\r\n        <ToggleButton value='/favorites' className=\"btn favorites-btn\" disabled={page.includes('favorites')} style={{ fontSize: '18px' }}>\r\n          Favorites\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </header>\r\n  )\r\n}\r\n","// import currentCityReducer from \"../reducers/currentCity\"\r\n\r\nexport const addFavorite = (city) => {\r\n  return {\r\n    type: 'ADD_FAVORITE',\r\n    payload: {\r\n      name: city.name,\r\n      key: city.key,\r\n      currentWeather: city.currentWeather,\r\n      currentTemp: city.currentTemp\r\n    }\r\n  }\r\n}\r\n\r\nexport const removeFavorite = (city) => {\r\n  return {\r\n    type: 'REMOVE_FAVORITE',\r\n    payload: {\r\n      name: city.name,\r\n      key: city.key\r\n    }\r\n  }\r\n}\r\n\r\nexport const currentCity = (city) => {\r\n  return {\r\n    type: 'SET_CURRENT_CITY',\r\n    payload: {\r\n      name: city.name,\r\n      key: city.key,\r\n      currentWeather: city.weather,\r\n      currentTemp: city.temp\r\n    }\r\n  }\r\n}\r\n\r\nexport const openModal = (reason) => {\r\n  return {\r\n    type: 'OPEN_MODAL',\r\n    payload: {\r\n      msg: reason\r\n    }\r\n  }\r\n}\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: 'CLOSE_MODAL'\r\n  }\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { closeModal } from '../../actions/index'\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport { Typography } from '@mui/material';\r\n\r\nimport './ErrorModal.css';\r\n\r\nexport default function ErrorModal() {\r\n  const dispatch = useDispatch();\r\n  const isModalOpen = useSelector(state => state.modal);\r\n\r\n  const closingModal = () => {\r\n    dispatch(closeModal())\r\n  };\r\n\r\n\r\n  return (\r\n    <Modal open={isModalOpen.open} className=\"actual-modal\" onClose={closingModal} >\r\n      <div className='modal-body'>\r\n        {/* {modalMessage.map(line => { */}\r\n        <Typography variant='h5' sx={{ \"lineHeight\": \"190%\", \"fontWeight\": \"600\", \"fontSize\": \"26px\" }}>{isModalOpen.msg}</Typography>\r\n\r\n\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { currentCity, openModal } from '../../../actions/index';\r\nimport ErrorModal from '../../ErrorModal/ErrorModal'\r\n\r\nimport { Paper, InputBase } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport './SearchBar.css';\r\n\r\n//  \r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst BASE_URL = 'https://dataservice.accuweather.com';\r\n\r\nexport default function SearchBar() {\r\n\r\n  const defaultCity = useSelector(state => state.currentCity);\r\n  const dispatch = useDispatch();\r\n  // Local state: searched string in input:\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  let presentedString = \"\";\r\n\r\n  // For a searched city, fetches the API's key issued for the city, with which forecast will be fetched\r\n  const getCityKey = async () => {\r\n    try {\r\n      const city = {};\r\n      const searchResponse = await fetch(BASE_URL +\r\n        `/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${searchString}`);\r\n      console.log(searchResponse)\r\n      const dsearchData = await searchResponse.json();\r\n      if (dsearchData !== []) {\r\n        city.name = dsearchData[0].LocalizedName;\r\n        city.key = dsearchData[0].Key;\r\n      }\r\n\r\n      return city;\r\n    } catch (e) {\r\n      dispatch(openModal(\"Something went wrong with the search... \\n Are you sure of your spelling?\"));\r\n    }\r\n  };\r\n\r\n\r\n  const getCityCurrentWeather = async (city) => {\r\n    try {\r\n      const weatherResponse = await fetch(BASE_URL +\r\n        `/currentconditions/v1/${city.key}?apikey=${API_KEY}&metric=true`);\r\n      const weatherData = await weatherResponse.json();\r\n\r\n      city.weather = weatherData[0].WeatherText;\r\n      city.temp = Math.round(weatherData[0].Temperature.Metric.Value);\r\n\r\n      dispatch(currentCity(city))\r\n    } catch (e) {\r\n      dispatch(openModal(\"Something went wrong with the search... \\n Are you sure of your spelling?\"));\r\n    }\r\n  };\r\n\r\n\r\n  const getCityInfo = async () => {\r\n    const city = await getCityKey();\r\n\r\n    await getCityCurrentWeather(city);\r\n  };\r\n\r\n\r\n  // useEffect(() => {\r\n  //   getCityCurrentWeather(defaultCity)\r\n  // }, []);\r\n\r\n\r\n  const typingString = (e) => {\r\n    let value = e.target.value;\r\n    const ascii = value.charCodeAt(value.length - 1);\r\n    if ((65 <= ascii && ascii <= 90) || (97 <= ascii && ascii <= 122) || ascii === 32) {\r\n    } else {\r\n      value = value.slice(0, -1);\r\n    }\r\n    setSearchString(value)\r\n  }\r\n\r\n  // Search event\r\n  const keyPressed = async (e) => {\r\n    if (e.keyCode === 13 || e.type === 'click') {\r\n      e.preventDefault();\r\n      if (searchString !== '') {\r\n        getCityInfo();\r\n        setSearchString('') // Resets search field\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log('oresentedString: ', presentedString)\r\n  return (\r\n    <Paper className=\"search-comp\" sx={{ width: '250px' }}>\r\n      <InputBase variant='filled' sx={{ width: '100%' }} className=\"search-input\" placeholder=\"Type a city's name...\" onChange={typingString} value={searchString} onKeyDown={keyPressed} color='primary' />\r\n      <IconButton sx={{ p: '10px' }} onClick={keyPressed}>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      {presentedString}\r\n      <ErrorModal />\r\n    </Paper >\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport './ForcastDay.css';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function ForcastDay({ day }) {\r\n\r\n\r\n  return (\r\n    <Card className='forcast_card'>\r\n      <CardContent className=\"forcast-content\">\r\n        <Typography variant=\"h4\" className='day-details'>{day.dayOfWeek}</Typography>\r\n        <Typography variant=\"h5\" className='day-details temp'>\r\n          {day.maxTemp}\r\n          <span>&deg;</span>\r\n          -\r\n          {day.minTemp}\r\n          <span>&deg;</span>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addFavorite, removeFavorite, openModal } from '../../../actions/index'\r\n\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport './LikesUnit.css';\r\n\r\nexport default function LikesUnit({ isCityDisplayed }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const currCity = useSelector(state => {\r\n    return state.currentCity\r\n  });\r\n  const savedFavs = useSelector(state => state.favorites);\r\n  const [isLiked, setIsLiked] = useState(savedFavs.findIndex(city => city.key === currCity.key) > -1);\r\n\r\n  useEffect(() => {\r\n    const didLikeChange = savedFavs.findIndex(city => city.key === currCity.key);\r\n    setIsLiked(didLikeChange > -1)\r\n  }, [currCity, isLiked])\r\n\r\n\r\n\r\n\r\n  const toggleLike = () => {\r\n    if (isLiked) {\r\n      dispatch(removeFavorite(currCity));\r\n    } else {\r\n      if (savedFavs.length === 10) {\r\n        dispatch(openModal('One can only have so much love... 10 cities are plenty'))\r\n      } else {\r\n        dispatch(addFavorite(currCity));\r\n      }\r\n    }\r\n    setIsLiked(!isLiked);\r\n  }\r\n\r\n  if (!isCityDisplayed) return null;\r\n\r\n  return (\r\n    <div className='like-unit-comp'>\r\n      {isLiked ? <FavoriteIcon sx={{ 'fontSize': '54px' }} className='heart-icon like' onClick={toggleLike} />\r\n        : <FavoriteBorderIcon sx={{ 'fontSize': '54px' }} className='heart-icon unlike' onClick={toggleLike} />}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography, Card, CardContent } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport ForcastDay from '../ForcastDay/ForcastDay';\r\nimport LikesUnit from '../LikesUnit/LikesUnit'\r\n// import mockWeather from '../../../mock/mockJSLM';\r\nimport './WeatherDisplay.css';\r\nimport { openModal } from '../../../actions';\r\n// import key from '../../../key';\r\n\r\nconst DAY_OF_WEEK = [\r\n  'Sun',\r\n  'Mon',\r\n  'Tue',\r\n  'Wed',\r\n  'Thu',\r\n  'Fri',\r\n  'Sat'\r\n];\r\n\r\nconst SERVICE_URL = 'https://dataservice.accuweather.com';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nexport default function WeatherDisplay() {\r\n  const { currentTemp, currentWeather, name, key } = useSelector(state => state.currentCity);\r\n  const dispatch = useDispatch();\r\n  const [forecast, setForecast] = useState([]);\r\n\r\n  // FETCHES DATA AUTOMATICALLY ON LOAD. DEFAULT LOCATION: TEL-AVIV\r\n  useEffect(() => {\r\n    async function fetchForecast() {\r\n      try {\r\n        const forecastResponse = await fetch(SERVICE_URL +\r\n          `/forecasts/v1/daily/5day/${key}?apikey=${API_KEY}&metric=true`);\r\n        const forecastData = await forecastResponse.json();\r\n\r\n        const parsedForecast = forecastData.DailyForecasts.map(day => {\r\n          /*\r\n            Three values for each desplyed day on the forecast:\r\n              1) Day; 2) Max temp; 3) Min temp\r\n          */\r\n          return {\r\n            dayOfWeek: DAY_OF_WEEK[(new Date(day.Date)).getDay()],\r\n            maxTemp: Math.round(day.Temperature.Maximum.Value),\r\n            minTemp: Math.round(day.Temperature.Minimum.Value)\r\n          }\r\n        });\r\n        // Sets parsed data to state\r\n        setForecast(parsedForecast);\r\n      } catch (e) {\r\n        console.log('error in forecast')\r\n        // Opens dialog on error\r\n        dispatch(openModal('Something went wrong with fetching this city\\'s forecast... Just stay home!'))\r\n      }\r\n    }\r\n\r\n    // Calls (async) function from above\r\n    fetchForecast();\r\n  }, [name]);\r\n\r\n  return (\r\n    <Box className='weather-display'>\r\n      <div className='display-top'>\r\n        {currentTemp && <Card className='current-weather-card'>\r\n          <CardContent className=\"current-weather-content\">\r\n            <Typography variant='h5' className=\"current-weather-detail\">\r\n              {currentWeather}\r\n            </Typography>\r\n            <Typography variant='h5' className=\"current-weather-detail\">\r\n              {currentTemp}\r\n              <span>&deg;</span>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>}\r\n        {currentTemp ?\r\n          <Typography className='city-name' variant='h3'>{name}</Typography>\r\n          : <Typography className='city-name city-err' variant='h3'>Sorry, something went wrong...</Typography>}\r\n        <LikesUnit className='city-like' isCityDisplayed={!!currentTemp} />\r\n      </div>\r\n      <div className='display-bottom'>\r\n        {\r\n          forecast.map((day, i) => {\r\n            return <ForcastDay key={day.dayOfWeek} day={day} />\r\n          })\r\n        }\r\n      </div>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport WeatherDisplay from '../WeatherDisplay/WeatherDisplay';\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <main className='home-comp'>\r\n      <SearchBar className='search-in-home' />\r\n      <WeatherDisplay className='weather-display-in-home' />\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { currentCity } from '../../../actions/index'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  Typography\r\n} from '@mui/material';\r\n\r\nimport './Favorites.css';\r\n\r\nexport default function Favorites() {\r\n\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n  const favedCities = useSelector(state => state.favorites);\r\n\r\n  const choseFavorite = (city) => {\r\n    const chosenCity = {\r\n      key: city.key,\r\n      name: city.name\r\n    };\r\n\r\n    dispatch(currentCity(chosenCity));\r\n    history.replace('/');\r\n  }\r\n  // NOTE: try to avoid creating a function on-click on <Card />\r\n  return (\r\n    <Box className='favorites-comp'>\r\n      <Paper className='favorites-group' sx={{ \"backgroundColor\": \"#f5f5f5\" }}>\r\n        {favedCities.map(city => {\r\n          return (\r\n            <Card key={city.name} value={city.key} onClick={() => choseFavorite(city)} className='faved-city-card'>\r\n              <CardContent className='faved-city-content'>\r\n                <Typography className='faved-city city-name' variant='h4'>{city.name}</Typography>\r\n                <Typography className='faved-city city-temp' variant='h5'>\r\n                  {city.currentTemp}\r\n                  <span>&deg;</span>\r\n                </Typography>\r\n                <Typography className='faved-city city-weather' variant='h5'>{city.currentWeather}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          )\r\n        })}\r\n      </Paper>\r\n    </Box>\r\n  )\r\n}\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Home from './Components/MainComp/Home/Home';\nimport Favorites from \"./Components/FaveComp/Favorites/Favorites\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router basename={`${process.env.REACT_APP_BASE_URL}`}>\n        <Header className=\"app-header\" />\n\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/favorites' component={Favorites} />\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst INITIAL_STATE = {\r\n  name: 'Tel Aviv',\r\n  key: '215854'\r\n}\r\n\r\n/*\r\n  Holds the city currently displayed.\r\n  Default city: Tel Aviv\r\n*/\r\n\r\nconst currentCityReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CURRENT_CITY':\r\n      return state = action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currentCityReducer;","\r\n/*\r\n  Holds all the favored cities.\r\n  No default values.\r\n  WILL REFRESH on re-load\r\n*/\r\nconst favoritesReducer = (state = [], action) => {\r\n\r\n  switch (action.type) {\r\n    case 'ADD_FAVORITE':\r\n      if (state.every(city => city.key !== action.payload.key)) {\r\n        state.push(action.payload);\r\n      }\r\n      return state;\r\n    case 'REMOVE_FAVORITE':\r\n      const filteredState = state.filter(city => city.key !== action.payload.key);\r\n      return filteredState;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default favoritesReducer;","\r\nconst INITIAL_STATE = {\r\n  open: false,\r\n  msg: \"\"\r\n}\r\n\r\n/*\r\n  Holds modal's state.\r\n  Default state: close\r\n*/\r\n\r\nconst modalReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_MODAL\":\r\n      return {\r\n        open: true,\r\n        msg: action.payload.msg\r\n      };\r\n    case \"CLOSE_MODAL\":\r\n      return {\r\n        open: false,\r\n        msg: \"\"\r\n      };\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default modalReducer;","import currentCityReducer from './currentCity';\r\nimport favoritesReducer from './favorites';\r\nimport modalReducer from './modal';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  favorites: favoritesReducer,\r\n  currentCity: currentCityReducer,\r\n  modal: modalReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/reducersIndex';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}